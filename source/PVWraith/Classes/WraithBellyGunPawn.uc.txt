
class WraithBellyGunPawn extends ONSDualACGatlingGunPawn CacheExempt;


//simulated function ProjectilePostRender2D(Projectile P, Canvas C, float ScreenLocX, float ScreenLocY);

function IncomingMissile(Projectile P);

function ShouldTargetMissile(Projectile P)
{
	if (VSize(P.Location - Location) < Gun.TraceRange && AIController(Controller) != None && AIController(Controller).Skill >= 2.5 + 2.5 * Sqrt(FRand()))
		ShootMissile(P);
}


function VehicleCeaseFire(bool bWasAltFire)
{
	Super.VehicleCeaseFire(bWasAltFire);
	if (Gun != None)
	{
		Gun.WeaponCeaseFire(Controller, bWasAltFire); // WTF was this missing in ONSWeaponPawn?
	}
}

function KDriverEnter(Pawn P)
{
    super.KDriverEnter(P);
    Log("Gunner EnterWraithTurret");
		if (Gun != None)
	  {
	  	  log("Test Fire on entry");
	  	  Gun.AltFire(Controller);
	  	  Gun.AltFire(Controller);
				Gun.WeaponCeaseFire(Controller, true); // WTF was this missing in ONSWeaponPawn?
	  }
	
}

//=============================================================================
// Default values
//=============================================================================

defaultproperties
{
     GunClass=Class'PVWraith.WraithBellyGun'
     FPCamPos=(X=0.000000)
     //FPCamPos=(X=35.000000,Z=15.000000)
     TPCamDistance=0.000000
     TPCamLookat=(X=5.000000,Z=-50.000000)
     //TPCamLookat=(X=5.000000,Z=50.000000)
     TPCamDistRange=(Min=0.000000,Max=0.000000)
     
     VehiclePositionString="in a Wraith turret"
     VehicleNameString="Wraith Turret"
}
